{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport shortId from 'shortid';\nimport produce from 'immer';\nexport var initailState = {\n  mainPosts: [{\n    id: 1,\n    User: {\n      id: 1,\n      nickname: 'KDONG'\n    },\n    content: '첫 번째 게시글 #크동 #프론트엔드',\n    Images: [{\n      id: shortId.generate(),\n      src: 'https://kdong1224.github.io/dothome21/class/img/img05.jpg'\n    }, {\n      id: shortId.generate(),\n      src: 'https://kdong1224.github.io/dothome21/class/img/img03.jpg'\n    }, {\n      id: shortId.generate(),\n      src: 'https://kdong1224.github.io/dothome21/class/img/img08.jpg'\n    }],\n    Comments: [{\n      id: shortId.generate(),\n      User: {\n        id: shortId.generate(),\n        nickname: 'OMNA'\n      },\n      content: '우와 멋있어요~'\n    }, {\n      id: shortId.generate(),\n      User: {\n        id: shortId.generate(),\n        nickname: 'noyclah_jsk'\n      },\n      content: '얼른 보고싶어요~'\n    }]\n  }],\n  imagePaths: [],\n  addPostLoading: false,\n  addPostDone: false,\n  addPostError: null,\n  removePostLoading: false,\n  removePostDone: false,\n  removePostError: null,\n  addCommentLoading: false,\n  addCommentDone: false,\n  addCommentError: null\n};\nexport var ADD_POST_REQUEST = 'ADD_POST_REQUEST';\nexport var ADD_POST_SUCCESS = 'ADD_POST_SUCCESS';\nexport var ADD_POST_FAILURE = 'ADD_POST_FAILURE';\nexport var REMOVE_POST_REQUEST = 'REMOVE_POST_REQUEST';\nexport var REMOVE_POST_SUCCESS = 'REMOVE_POST_SUCCESS';\nexport var REMOVE_POST_FAILURE = 'REMOVE_POST_FAILURE';\nexport var ADD_COMMENT_REQUEST = 'ADD_COMMENT_REQUEST';\nexport var ADD_COMMENT_SUCCESS = 'ADD_COMMENT_SUCCESS';\nexport var ADD_COMMENT_FAILURE = 'ADD_COMMENT_FAILURE';\nexport var addPost = function addPost(data) {\n  return {\n    type: ADD_POST_REQUEST,\n    data: data\n  };\n};\nexport var addCommnet = function addCommnet(data) {\n  return {\n    type: ADD_COMMENT_REQUEST,\n    data: data\n  };\n};\n\nvar dummyPost = function dummyPost(data) {\n  return {\n    id: data.id,\n    content: data.content,\n    User: {\n      id: 1,\n      nickname: 'KDONG'\n    },\n    Images: [],\n    Comments: []\n  };\n};\n\nvar dummyComment = function dummyComment(data) {\n  return {\n    id: shortId.generate(),\n    content: data,\n    User: {\n      id: 1,\n      nickname: 'KDONG'\n    }\n  };\n}; // 이전 상태를 액션을 통해 다음 상태로 만들어내는 함수(붋변성은 지키면서)\n// immer -> state 는 draft 로 바뀐다고 생각하면 된다.\n\n\nvar reducer = function reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initailState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  return produce(state, function (draft) {\n    switch (action.type) {\n      case ADD_POST_REQUEST:\n        return _objectSpread(_objectSpread({}, state), {}, {\n          addPostLoading: true,\n          addPostDone: false,\n          addPostError: null\n        });\n\n      case ADD_POST_SUCCESS:\n        return _objectSpread(_objectSpread({}, state), {}, {\n          mainPosts: [dummyPost(action.data)].concat(_toConsumableArray(state.mainPosts)),\n          addPostLoading: false,\n          addPostDone: true\n        });\n\n      case ADD_POST_FAILURE:\n        return _objectSpread(_objectSpread({}, state), {}, {\n          addPostLoading: false,\n          addPostError: action.error\n        });\n\n      case REMOVE_POST_REQUEST:\n        return _objectSpread(_objectSpread({}, state), {}, {\n          removePostLoading: true,\n          removePostDone: false,\n          removePostError: null\n        });\n\n      case REMOVE_POST_SUCCESS:\n        return _objectSpread(_objectSpread({}, state), {}, {\n          mainPosts: state.mainPosts.filter(function (v) {\n            return v.id !== action.data;\n          }),\n          removePostLoading: false,\n          removePostDone: true\n        });\n\n      case REMOVE_POST_FAILURE:\n        return _objectSpread(_objectSpread({}, state), {}, {\n          removePostLoading: false,\n          removePostError: action.error\n        });\n\n      case ADD_COMMENT_REQUEST:\n        return _objectSpread(_objectSpread({}, state), {}, {\n          addCommentLoading: true,\n          addCommentDone: false,\n          addCommentError: null\n        });\n\n      case ADD_COMMENT_SUCCESS:\n        {\n          // action.data.content, postId, userId\n          var postIndex = state.mainPosts.findIndex(function (v) {\n            return v.id === action.data.postId;\n          });\n\n          var post = _objectSpread({}, state.mainPosts[postIndex]);\n\n          post.Comments = [dummyComment(action.data.content)].concat(_toConsumableArray(post.Comments));\n\n          var mainPosts = _toConsumableArray(state.mainPosts);\n\n          mainPosts[postIndex] = post;\n          return _objectSpread(_objectSpread({}, state), {}, {\n            mainPosts: mainPosts,\n            addCommentLoading: false,\n            addCommentDone: true\n          });\n        }\n\n      case ADD_COMMENT_FAILURE:\n        return _objectSpread(_objectSpread({}, state), {}, {\n          addCommentLoading: false,\n          addCommentError: action.error\n        });\n\n      default:\n        return state;\n    }\n  });\n};\n\nexport default reducer;","map":{"version":3,"sources":["/Users/gangdongjae/Desktop/inflearn/React-NodeBird-Next.js_with ZeroCho/code/source_code/react-nodebird-master/prepare/front/reducers/post.js"],"names":["shortId","produce","initailState","mainPosts","id","User","nickname","content","Images","generate","src","Comments","imagePaths","addPostLoading","addPostDone","addPostError","removePostLoading","removePostDone","removePostError","addCommentLoading","addCommentDone","addCommentError","ADD_POST_REQUEST","ADD_POST_SUCCESS","ADD_POST_FAILURE","REMOVE_POST_REQUEST","REMOVE_POST_SUCCESS","REMOVE_POST_FAILURE","ADD_COMMENT_REQUEST","ADD_COMMENT_SUCCESS","ADD_COMMENT_FAILURE","addPost","data","type","addCommnet","dummyPost","dummyComment","reducer","state","action","draft","error","filter","v","postIndex","findIndex","postId","post"],"mappings":"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","sourcesContent":["import shortId from 'shortid';\nimport produce from 'immer';\n\nexport const initailState = {\n  mainPosts: [\n    {\n      id: 1,\n      User: {\n        id: 1,\n        nickname: 'KDONG',\n      },\n      content: '첫 번째 게시글 #크동 #프론트엔드',\n      Images: [\n        {\n          id: shortId.generate(),\n          src: 'https://kdong1224.github.io/dothome21/class/img/img05.jpg',\n        },\n        {\n          id: shortId.generate(),\n          src: 'https://kdong1224.github.io/dothome21/class/img/img03.jpg',\n        },\n        {\n          id: shortId.generate(),\n          src: 'https://kdong1224.github.io/dothome21/class/img/img08.jpg',\n        },\n      ],\n      Comments: [\n        {\n          id: shortId.generate(),\n          User: {\n            id: shortId.generate(),\n            nickname: 'OMNA',\n          },\n          content: '우와 멋있어요~',\n        },\n        {\n          id: shortId.generate(),\n          User: {\n            id: shortId.generate(),\n            nickname: 'noyclah_jsk',\n          },\n          content: '얼른 보고싶어요~',\n        },\n      ],\n    },\n  ],\n  imagePaths: [],\n  addPostLoading: false,\n  addPostDone: false,\n  addPostError: null,\n  removePostLoading: false,\n  removePostDone: false,\n  removePostError: null,\n  addCommentLoading: false,\n  addCommentDone: false,\n  addCommentError: null,\n};\n\nexport const ADD_POST_REQUEST = 'ADD_POST_REQUEST';\nexport const ADD_POST_SUCCESS = 'ADD_POST_SUCCESS';\nexport const ADD_POST_FAILURE = 'ADD_POST_FAILURE';\n\nexport const REMOVE_POST_REQUEST = 'REMOVE_POST_REQUEST';\nexport const REMOVE_POST_SUCCESS = 'REMOVE_POST_SUCCESS';\nexport const REMOVE_POST_FAILURE = 'REMOVE_POST_FAILURE';\n\nexport const ADD_COMMENT_REQUEST = 'ADD_COMMENT_REQUEST';\nexport const ADD_COMMENT_SUCCESS = 'ADD_COMMENT_SUCCESS';\nexport const ADD_COMMENT_FAILURE = 'ADD_COMMENT_FAILURE';\n\nexport const addPost = (data) => ({\n  type: ADD_POST_REQUEST,\n  data,\n});\n\nexport const addCommnet = (data) => ({\n  type: ADD_COMMENT_REQUEST,\n  data,\n});\n\nconst dummyPost = (data) => ({\n  id: data.id,\n  content: data.content,\n  User: {\n    id: 1,\n    nickname: 'KDONG',\n  },\n  Images: [],\n  Comments: [],\n});\n\nconst dummyComment = (data) => ({\n  id: shortId.generate(),\n  content: data,\n  User: {\n    id: 1,\n    nickname: 'KDONG',\n  },\n});\n\n// 이전 상태를 액션을 통해 다음 상태로 만들어내는 함수(붋변성은 지키면서)\n// immer -> state 는 draft 로 바뀐다고 생각하면 된다.\nconst reducer = (state = initailState, action) => {\n  return produce(state, (draft) => {\n    switch (action.type) {\n      case ADD_POST_REQUEST:\n        return {\n          ...state,\n          addPostLoading: true,\n          addPostDone: false,\n          addPostError: null,\n        };\n      case ADD_POST_SUCCESS:\n        return {\n          ...state,\n          mainPosts: [dummyPost(action.data), ...state.mainPosts],\n          addPostLoading: false,\n          addPostDone: true,\n        };\n      case ADD_POST_FAILURE:\n        return {\n          ...state,\n          addPostLoading: false,\n          addPostError: action.error,\n        };\n      case REMOVE_POST_REQUEST:\n        return {\n          ...state,\n          removePostLoading: true,\n          removePostDone: false,\n          removePostError: null,\n        };\n      case REMOVE_POST_SUCCESS:\n        return {\n          ...state,\n          mainPosts: state.mainPosts.filter((v) => v.id !== action.data),\n          removePostLoading: false,\n          removePostDone: true,\n        };\n      case REMOVE_POST_FAILURE:\n        return {\n          ...state,\n          removePostLoading: false,\n          removePostError: action.error,\n        };\n      case ADD_COMMENT_REQUEST:\n        return {\n          ...state,\n          addCommentLoading: true,\n          addCommentDone: false,\n          addCommentError: null,\n        };\n      case ADD_COMMENT_SUCCESS: {\n        // action.data.content, postId, userId\n        const postIndex = state.mainPosts.findIndex(\n          (v) => v.id === action.data.postId,\n        );\n        const post = { ...state.mainPosts[postIndex] };\n        post.Comments = [dummyComment(action.data.content), ...post.Comments];\n        const mainPosts = [...state.mainPosts];\n        mainPosts[postIndex] = post;\n        return {\n          ...state,\n          mainPosts,\n          addCommentLoading: false,\n          addCommentDone: true,\n        };\n      }\n      case ADD_COMMENT_FAILURE:\n        return {\n          ...state,\n          addCommentLoading: false,\n          addCommentError: action.error,\n        };\n      default:\n        return state;\n    }\n  });\n};\n\nexport default reducer;\n"]},"metadata":{},"sourceType":"module"}