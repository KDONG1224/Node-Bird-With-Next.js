{"ast":null,"code":"import { all, fork, put, takeLatest, delay } from 'redux-saga/effects';\nimport axios from 'axios';\nimport { ADD_POST_REQUEST, ADD_POST_SUCCESS, ADD_POST_FAILURE, ADD_COMMENT_REQUEST, ADD_COMMENT_SUCCESS, ADD_COMMENT_FAILURE } from '../reducers/post';\n\nfunction addPostAPI() {\n  return axios.post('/api/post', data);\n}\n\nfunction* addPost(action) {\n  try {\n    // const result = yield call(addPostAPI, action.data);\n    yield delay(1000);\n    yield put({\n      type: ADD_POST_SUCCESS,\n      data: action.data\n    });\n  } catch (err) {\n    yield put({\n      type: ADD_POST_FAILURE,\n      data: err.resopnse.data\n    });\n  }\n}\n\nfunction addCommentAPI() {\n  return axios.Comment(`/api/post/${data.postId}/comment`, data);\n}\n\nfunction* addComment(action) {\n  try {\n    // const result = yield call(addCommentAPI, action.data);\n    yield delay(1000);\n    yield put({\n      type: ADD_COMMENT_SUCCESS,\n      data: action.data\n    });\n  } catch (err) {\n    yield put({\n      type: ADD_COMMENT_FAILURE,\n      data: err.resopnse.data\n    });\n  }\n}\n\nfunction* watchAddPost() {\n  yield takeLatest(ADD_POST_REQUEST, addPost);\n}\n\nfunction* watchAddComment() {\n  yield takeLatest(ADD_COMMENT_REQUEST, addComment);\n}\n\nexport default function* postSaga() {\n  yield all([fork(watchAddPost), fork(watchAddComment)]);\n}","map":{"version":3,"sources":["/Users/gangdongjae/Desktop/inflearn/React-NodeBird-Next.js_with ZeroCho/code/source_code/react-nodebird-master/prepare/front/sagas/post.js"],"names":["all","fork","put","takeLatest","delay","axios","ADD_POST_REQUEST","ADD_POST_SUCCESS","ADD_POST_FAILURE","ADD_COMMENT_REQUEST","ADD_COMMENT_SUCCESS","ADD_COMMENT_FAILURE","addPostAPI","post","data","addPost","action","type","err","resopnse","addCommentAPI","Comment","postId","addComment","watchAddPost","watchAddComment","postSaga"],"mappings":"AAAA,SAASA,GAAT,EAAcC,IAAd,EAAoBC,GAApB,EAAyBC,UAAzB,EAAqCC,KAArC,QAAkD,oBAAlD;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SACEC,gBADF,EAEEC,gBAFF,EAGEC,gBAHF,EAIEC,mBAJF,EAKEC,mBALF,EAMEC,mBANF,QAOO,kBAPP;;AASA,SAASC,UAAT,GAAsB;AACpB,SAAOP,KAAK,CAACQ,IAAN,CAAW,WAAX,EAAwBC,IAAxB,CAAP;AACD;;AAED,UAAUC,OAAV,CAAkBC,MAAlB,EAA0B;AACxB,MAAI;AACF;AACA,UAAMZ,KAAK,CAAC,IAAD,CAAX;AACA,UAAMF,GAAG,CAAC;AACRe,MAAAA,IAAI,EAAEV,gBADE;AAERO,MAAAA,IAAI,EAAEE,MAAM,CAACF;AAFL,KAAD,CAAT;AAID,GAPD,CAOE,OAAOI,GAAP,EAAY;AACZ,UAAMhB,GAAG,CAAC;AACRe,MAAAA,IAAI,EAAET,gBADE;AAERM,MAAAA,IAAI,EAAEI,GAAG,CAACC,QAAJ,CAAaL;AAFX,KAAD,CAAT;AAID;AACF;;AAED,SAASM,aAAT,GAAyB;AACvB,SAAOf,KAAK,CAACgB,OAAN,CAAe,aAAYP,IAAI,CAACQ,MAAO,UAAvC,EAAkDR,IAAlD,CAAP;AACD;;AAED,UAAUS,UAAV,CAAqBP,MAArB,EAA6B;AAC3B,MAAI;AACF;AACA,UAAMZ,KAAK,CAAC,IAAD,CAAX;AACA,UAAMF,GAAG,CAAC;AACRe,MAAAA,IAAI,EAAEP,mBADE;AAERI,MAAAA,IAAI,EAAEE,MAAM,CAACF;AAFL,KAAD,CAAT;AAID,GAPD,CAOE,OAAOI,GAAP,EAAY;AACZ,UAAMhB,GAAG,CAAC;AACRe,MAAAA,IAAI,EAAEN,mBADE;AAERG,MAAAA,IAAI,EAAEI,GAAG,CAACC,QAAJ,CAAaL;AAFX,KAAD,CAAT;AAID;AACF;;AAED,UAAUU,YAAV,GAAyB;AACvB,QAAMrB,UAAU,CAACG,gBAAD,EAAmBS,OAAnB,CAAhB;AACD;;AAED,UAAUU,eAAV,GAA4B;AAC1B,QAAMtB,UAAU,CAACM,mBAAD,EAAsBc,UAAtB,CAAhB;AACD;;AAED,eAAe,UAAUG,QAAV,GAAqB;AAClC,QAAM1B,GAAG,CAAC,CAACC,IAAI,CAACuB,YAAD,CAAL,EAAqBvB,IAAI,CAACwB,eAAD,CAAzB,CAAD,CAAT;AACD","sourcesContent":["import { all, fork, put, takeLatest, delay } from 'redux-saga/effects';\nimport axios from 'axios';\nimport {\n  ADD_POST_REQUEST,\n  ADD_POST_SUCCESS,\n  ADD_POST_FAILURE,\n  ADD_COMMENT_REQUEST,\n  ADD_COMMENT_SUCCESS,\n  ADD_COMMENT_FAILURE,\n} from '../reducers/post';\n\nfunction addPostAPI() {\n  return axios.post('/api/post', data);\n}\n\nfunction* addPost(action) {\n  try {\n    // const result = yield call(addPostAPI, action.data);\n    yield delay(1000);\n    yield put({\n      type: ADD_POST_SUCCESS,\n      data: action.data,\n    });\n  } catch (err) {\n    yield put({\n      type: ADD_POST_FAILURE,\n      data: err.resopnse.data,\n    });\n  }\n}\n\nfunction addCommentAPI() {\n  return axios.Comment(`/api/post/${data.postId}/comment`, data);\n}\n\nfunction* addComment(action) {\n  try {\n    // const result = yield call(addCommentAPI, action.data);\n    yield delay(1000);\n    yield put({\n      type: ADD_COMMENT_SUCCESS,\n      data: action.data,\n    });\n  } catch (err) {\n    yield put({\n      type: ADD_COMMENT_FAILURE,\n      data: err.resopnse.data,\n    });\n  }\n}\n\nfunction* watchAddPost() {\n  yield takeLatest(ADD_POST_REQUEST, addPost);\n}\n\nfunction* watchAddComment() {\n  yield takeLatest(ADD_COMMENT_REQUEST, addComment);\n}\n\nexport default function* postSaga() {\n  yield all([fork(watchAddPost), fork(watchAddComment)]);\n}\n"]},"metadata":{},"sourceType":"module"}