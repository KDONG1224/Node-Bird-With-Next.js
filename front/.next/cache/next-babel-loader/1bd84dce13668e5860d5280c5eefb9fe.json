{"ast":null,"code":"import { all, fork, put, takeLatest, delay } from 'redux-saga/effects';\nimport axios from 'axios';\n\nfunction addPostAPI() {\n  return axios.post('/api/post', data);\n}\n\nfunction* addPost(action) {\n  try {\n    // const result = yield call(addPostAPI, action.data);\n    yield delay(1000);\n    yield put({\n      type: 'ADD_POST_SUCCESS',\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: 'ADD_POST_FAILURE',\n      data: err.resopnse.data\n    });\n  }\n}\n\nfunction* watchAddPost() {\n  yield takeLatest('ADD_POST_REQUEST', addPost);\n}\n\nexport default function* postSaga() {\n  yield all([fork(watchAddPost)]);\n}","map":{"version":3,"sources":["/Users/gangdongjae/Desktop/inflearn/React-NodeBird-Next.js_with ZeroCho/code/source_code/react-nodebird-master/prepare/front/sagas/post.js"],"names":["all","fork","put","takeLatest","delay","axios","addPostAPI","post","data","addPost","action","type","result","err","resopnse","watchAddPost","postSaga"],"mappings":"AAAA,SAASA,GAAT,EAAcC,IAAd,EAAoBC,GAApB,EAAyBC,UAAzB,EAAqCC,KAArC,QAAkD,oBAAlD;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,SAASC,UAAT,GAAsB;AACpB,SAAOD,KAAK,CAACE,IAAN,CAAW,WAAX,EAAwBC,IAAxB,CAAP;AACD;;AAED,UAAUC,OAAV,CAAkBC,MAAlB,EAA0B;AACxB,MAAI;AACF;AACA,UAAMN,KAAK,CAAC,IAAD,CAAX;AACA,UAAMF,GAAG,CAAC;AACRS,MAAAA,IAAI,EAAE,kBADE;AAERH,MAAAA,IAAI,EAAEI,MAAM,CAACJ;AAFL,KAAD,CAAT;AAID,GAPD,CAOE,OAAOK,GAAP,EAAY;AACZ,UAAMX,GAAG,CAAC;AACRS,MAAAA,IAAI,EAAE,kBADE;AAERH,MAAAA,IAAI,EAAEK,GAAG,CAACC,QAAJ,CAAaN;AAFX,KAAD,CAAT;AAID;AACF;;AAED,UAAUO,YAAV,GAAyB;AACvB,QAAMZ,UAAU,CAAC,kBAAD,EAAqBM,OAArB,CAAhB;AACD;;AAED,eAAe,UAAUO,QAAV,GAAqB;AAClC,QAAMhB,GAAG,CAAC,CAACC,IAAI,CAACc,YAAD,CAAL,CAAD,CAAT;AACD","sourcesContent":["import { all, fork, put, takeLatest, delay } from 'redux-saga/effects';\nimport axios from 'axios';\n\nfunction addPostAPI() {\n  return axios.post('/api/post', data);\n}\n\nfunction* addPost(action) {\n  try {\n    // const result = yield call(addPostAPI, action.data);\n    yield delay(1000);\n    yield put({\n      type: 'ADD_POST_SUCCESS',\n      data: result.data,\n    });\n  } catch (err) {\n    yield put({\n      type: 'ADD_POST_FAILURE',\n      data: err.resopnse.data,\n    });\n  }\n}\n\nfunction* watchAddPost() {\n  yield takeLatest('ADD_POST_REQUEST', addPost);\n}\n\nexport default function* postSaga() {\n  yield all([fork(watchAddPost)]);\n}\n"]},"metadata":{},"sourceType":"module"}