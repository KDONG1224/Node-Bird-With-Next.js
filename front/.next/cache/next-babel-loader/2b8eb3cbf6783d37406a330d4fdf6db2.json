{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/Users/gangdongjae/Desktop/inflearn/[\\u1105\\u1175\\u1102\\u1172\\u110B\\u1165\\u11AF] React\\u1105\\u1169 NodeBird SNS \\u1106\\u1161\\u11AB\\u1103\\u1173\\u11AF\\u1100\\u1175/code/source_code/react-nodebird-master/prepare/front/components/CommentForm.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useCallback } from 'react';\nimport { Form, Input, Button } from 'antd';\nimport useInput from '../hooks/useInput';\nimport propTypes from 'prop-types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar CommentForm = function CommentForm(_ref) {\n  _s();\n\n  var post = _ref.post;\n\n  var _useInput = useInput(''),\n      _useInput2 = _slicedToArray(_useInput, 2),\n      commentText = _useInput2[0],\n      setCommentText = _useInput2[1];\n\n  var onSubmitComment = useCallback(function () {}, [commentText]);\n  return /*#__PURE__*/_jsxDEV(Form, {\n    onFinish: onSubmitComment,\n    children: /*#__PURE__*/_jsxDEV(Form.Input, {\n      children: [/*#__PURE__*/_jsxDEV(Input.Textarea, {\n        value: commentText,\n        onChange: onChangeCommentText,\n        row: 4\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"primary\",\n        htmlType: \"submit\",\n        children: \"\\uD638\\uD638\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(CommentForm, \"/kIsd8zoAAhDPmXMZv00ID9lumU=\", false, function () {\n  return [useInput];\n});\n\n_c = CommentForm;\nCommentForm.propType = {\n  post: PropTypes.object.isRequired\n};\nexport default CommentForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"CommentForm\");","map":{"version":3,"sources":["/Users/gangdongjae/Desktop/inflearn/[리뉴얼] React로 NodeBird SNS 만들기/code/source_code/react-nodebird-master/prepare/front/components/CommentForm.js"],"names":["React","useCallback","Form","Input","Button","useInput","propTypes","CommentForm","post","commentText","setCommentText","onSubmitComment","onChangeCommentText","propType","PropTypes","object","isRequired"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,WAAhB,QAAmC,OAAnC;AACA,SAASC,IAAT,EAAeC,KAAf,EAAsBC,MAAtB,QAAoC,MAApC;AACA,OAAOC,QAAP,MAAqB,mBAArB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;;AAEA,IAAMC,WAAW,GAAG,SAAdA,WAAc,OAAc;AAAA;;AAAA,MAAXC,IAAW,QAAXA,IAAW;;AAChC,kBAAsCH,QAAQ,CAAC,EAAD,CAA9C;AAAA;AAAA,MAAOI,WAAP;AAAA,MAAoBC,cAApB;;AACA,MAAMC,eAAe,GAAGV,WAAW,CAAC,YAAM,CAAE,CAAT,EAAW,CAACQ,WAAD,CAAX,CAAnC;AAEA,sBACE,QAAC,IAAD;AAAM,IAAA,QAAQ,EAAEE,eAAhB;AAAA,2BACE,QAAC,IAAD,CAAM,KAAN;AAAA,8BACE,QAAC,KAAD,CAAO,QAAP;AACE,QAAA,KAAK,EAAEF,WADT;AAEE,QAAA,QAAQ,EAAEG,mBAFZ;AAGE,QAAA,GAAG,EAAE;AAHP;AAAA;AAAA;AAAA;AAAA,eADF,eAME,QAAC,MAAD;AAAQ,QAAA,IAAI,EAAC,SAAb;AAAuB,QAAA,QAAQ,EAAC,QAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eANF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,WADF;AAcD,CAlBD;;GAAML,W;UACkCF,Q;;;KADlCE,W;AAoBNA,WAAW,CAACM,QAAZ,GAAuB;AACrBL,EAAAA,IAAI,EAAEM,SAAS,CAACC,MAAV,CAAiBC;AADF,CAAvB;AAIA,eAAeT,WAAf","sourcesContent":["import React, { useCallback } from 'react';\nimport { Form, Input, Button } from 'antd';\nimport useInput from '../hooks/useInput';\nimport propTypes from 'prop-types';\n\nconst CommentForm = ({ post }) => {\n  const [commentText, setCommentText] = useInput('');\n  const onSubmitComment = useCallback(() => {}, [commentText]);\n\n  return (\n    <Form onFinish={onSubmitComment}>\n      <Form.Input>\n        <Input.Textarea\n          value={commentText}\n          onChange={onChangeCommentText}\n          row={4}\n        />\n        <Button type=\"primary\" htmlType=\"submit\">\n          호호\n        </Button>\n      </Form.Input>\n    </Form>\n  );\n};\n\nCommentForm.propType = {\n  post: PropTypes.object.isRequired,\n};\n\nexport default CommentForm;\n"]},"metadata":{},"sourceType":"module"}