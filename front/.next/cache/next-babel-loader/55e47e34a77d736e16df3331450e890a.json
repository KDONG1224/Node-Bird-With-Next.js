{"ast":null,"code":"var _jsxFileName = \"/Users/gangdongjae/Desktop/inflearn/React-NodeBird-Next.js_with ZeroCho/code/source_code/react-nodebird-master/prepare/front/pages/index.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react'; // next에서는 안써도 됌\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport AppLayout from '../components/AppLayout';\nimport PostForm from '../components/PostForm';\nimport PostCard from '../components/PostCard';\nimport { LOAD_POSTS_REQUEST } from '../reducers/post';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar Home = function Home() {\n  _s();\n\n  var dispatch = useDispatch();\n\n  var _useSelector = useSelector(function (state) {\n    return state.user;\n  }),\n      me = _useSelector.me;\n\n  var _useSelector2 = useSelector(function (state) {\n    return state.post;\n  }),\n      mainPosts = _useSelector2.mainPosts,\n      hasMorePost = _useSelector2.hasMorePost;\n\n  useEffect(function () {\n    dispatch({\n      type: LOAD_POSTS_REQUEST\n    });\n  }, []);\n  useEffect(function () {\n    function onScroll() {\n      // console.log(\n      //   window.scrollY,\n      //   document.documentElement.clientHeight,\n      //   document.documentElement.scrollHeight,\n      // );\n      if (window.scrollY + document.documentElement.clientHeight === document.documentElement.scrollHeight - 300) {\n        if (hasMorePost) {\n          dispatch({\n            type: LOAD_POSTS_REQUEST\n          });\n        }\n      }\n    }\n\n    window.addEventListener('scroll', onScroll);\n    return function () {\n      window.removeEventListener('scroll', onScroll);\n    };\n  }, [hasMorePost]);\n  return /*#__PURE__*/_jsxDEV(AppLayout, {\n    children: [me && /*#__PURE__*/_jsxDEV(PostForm, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 14\n    }, _this), mainPosts.map(function (post, index) {\n      return /*#__PURE__*/_jsxDEV(PostCard, {\n        post: post\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, _this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(Home, \"t5W3f13kdHJN+C4GYAtNP8Viywk=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = Home;\nexport default Home; // 안티패턴\n// 피해야 되는것, 인덱스를 키로 사용하면 안됌.\n// 반복되는것들이 지워질 가능성이 있는것, 순서가 달라지거나, 중간에 뭐가 추가될때 인덱스를 키로 사용하면 안됌.\n// 다만, 바뀌지 않으면 인덱스를 키로 사용가능.\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/Users/gangdongjae/Desktop/inflearn/React-NodeBird-Next.js_with ZeroCho/code/source_code/react-nodebird-master/prepare/front/pages/index.js"],"names":["React","useEffect","useDispatch","useSelector","AppLayout","PostForm","PostCard","LOAD_POSTS_REQUEST","Home","dispatch","state","user","me","post","mainPosts","hasMorePost","type","onScroll","window","scrollY","document","documentElement","clientHeight","scrollHeight","addEventListener","removeEventListener","map","index"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC,C,CACA;;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,SAASC,kBAAT,QAAmC,kBAAnC;;;AAEA,IAAMC,IAAI,GAAG,SAAPA,IAAO,GAAM;AAAA;;AACjB,MAAMC,QAAQ,GAAGP,WAAW,EAA5B;;AACA,qBAAeC,WAAW,CAAC,UAACO,KAAD;AAAA,WAAWA,KAAK,CAACC,IAAjB;AAAA,GAAD,CAA1B;AAAA,MAAQC,EAAR,gBAAQA,EAAR;;AACA,sBAAmCT,WAAW,CAAC,UAACO,KAAD;AAAA,WAAWA,KAAK,CAACG,IAAjB;AAAA,GAAD,CAA9C;AAAA,MAAQC,SAAR,iBAAQA,SAAR;AAAA,MAAmBC,WAAnB,iBAAmBA,WAAnB;;AAEAd,EAAAA,SAAS,CAAC,YAAM;AACdQ,IAAAA,QAAQ,CAAC;AACPO,MAAAA,IAAI,EAAET;AADC,KAAD,CAAR;AAGD,GAJQ,EAIN,EAJM,CAAT;AAMAN,EAAAA,SAAS,CAAC,YAAM;AACd,aAASgB,QAAT,GAAoB;AAClB;AACA;AACA;AACA;AACA;AACA,UACEC,MAAM,CAACC,OAAP,GAAiBC,QAAQ,CAACC,eAAT,CAAyBC,YAA1C,KACAF,QAAQ,CAACC,eAAT,CAAyBE,YAAzB,GAAwC,GAF1C,EAGE;AACA,YAAIR,WAAJ,EAAiB;AACfN,UAAAA,QAAQ,CAAC;AACPO,YAAAA,IAAI,EAAET;AADC,WAAD,CAAR;AAGD;AACF;AACF;;AACDW,IAAAA,MAAM,CAACM,gBAAP,CAAwB,QAAxB,EAAkCP,QAAlC;AACA,WAAO,YAAM;AACXC,MAAAA,MAAM,CAACO,mBAAP,CAA2B,QAA3B,EAAqCR,QAArC;AACD,KAFD;AAGD,GAtBQ,EAsBN,CAACF,WAAD,CAtBM,CAAT;AAwBA,sBACE,QAAC,SAAD;AAAA,eACGH,EAAE,iBAAI,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,aADT,EAEGE,SAAS,CAACY,GAAV,CAAc,UAACb,IAAD,EAAOc,KAAP;AAAA,0BACb,QAAC,QAAD;AAAsB,QAAA,IAAI,EAAEd;AAA5B,SAAec,KAAf;AAAA;AAAA;AAAA;AAAA,eADa;AAAA,KAAd,CAFH;AAAA;AAAA;AAAA;AAAA;AAAA,WADF;AAQD,CA3CD;;GAAMnB,I;UACaN,W,EACFC,W,EACoBA,W;;;KAH/BK,I;AA6CN,eAAeA,IAAf,C,CAEA;AACA;AACA;AACA","sourcesContent":["import React, { useEffect } from 'react';\n// next에서는 안써도 됌\nimport { useDispatch, useSelector } from 'react-redux';\nimport AppLayout from '../components/AppLayout';\nimport PostForm from '../components/PostForm';\nimport PostCard from '../components/PostCard';\nimport { LOAD_POSTS_REQUEST } from '../reducers/post';\n\nconst Home = () => {\n  const dispatch = useDispatch();\n  const { me } = useSelector((state) => state.user);\n  const { mainPosts, hasMorePost } = useSelector((state) => state.post);\n\n  useEffect(() => {\n    dispatch({\n      type: LOAD_POSTS_REQUEST,\n    });\n  }, []);\n\n  useEffect(() => {\n    function onScroll() {\n      // console.log(\n      //   window.scrollY,\n      //   document.documentElement.clientHeight,\n      //   document.documentElement.scrollHeight,\n      // );\n      if (\n        window.scrollY + document.documentElement.clientHeight ===\n        document.documentElement.scrollHeight - 300\n      ) {\n        if (hasMorePost) {\n          dispatch({\n            type: LOAD_POSTS_REQUEST,\n          });\n        }\n      }\n    }\n    window.addEventListener('scroll', onScroll);\n    return () => {\n      window.removeEventListener('scroll', onScroll);\n    };\n  }, [hasMorePost]);\n\n  return (\n    <AppLayout>\n      {me && <PostForm />}\n      {mainPosts.map((post, index) => (\n        <PostCard key={index} post={post} />\n      ))}\n    </AppLayout>\n  );\n};\n\nexport default Home;\n\n// 안티패턴\n// 피해야 되는것, 인덱스를 키로 사용하면 안됌.\n// 반복되는것들이 지워질 가능성이 있는것, 순서가 달라지거나, 중간에 뭐가 추가될때 인덱스를 키로 사용하면 안됌.\n// 다만, 바뀌지 않으면 인덱스를 키로 사용가능.\n"]},"metadata":{},"sourceType":"module"}