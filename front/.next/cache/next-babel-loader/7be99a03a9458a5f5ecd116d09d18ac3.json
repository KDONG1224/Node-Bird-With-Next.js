{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nconst initailState = {\n  name: 'kdong',\n  age: 30,\n  password: 'omna'\n}; // const changeNickname = {\n//   type: 'CHANGE_NICKNAME',\n//   data: 'KDONG',\n// };\n// aciton creator\n\nconst changeNickname = data => {\n  return {\n    type: 'CHANGE_NICKNAME',\n    data\n  };\n};\n\nchangeNickname('KDONG'); // {\n//   type: 'CHANGE_NICKNAME',\n//   data: 'KDONG'\n// }\n\nstore.dispatch(changeNickname('KDONG')); // reducer는 (이전상태, 액션) => 다음상태\n\nconst rootReducer = (state = initailState, action) => {\n  switch (action.type) {\n    case 'CHANGE_NICKNAME':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        name: action.data\n      });\n  }\n};","map":{"version":3,"sources":["/Users/gangdongjae/Desktop/inflearn/[리뉴얼] React로 NodeBird SNS 만들기/code/source_code/react-nodebird-master/prepare/front/reducers/index.js"],"names":["initailState","name","age","password","changeNickname","data","type","store","dispatch","rootReducer","state","action"],"mappings":";;;;;;AAAA,MAAMA,YAAY,GAAG;AACnBC,EAAAA,IAAI,EAAE,OADa;AAEnBC,EAAAA,GAAG,EAAE,EAFc;AAGnBC,EAAAA,QAAQ,EAAE;AAHS,CAArB,C,CAMA;AACA;AACA;AACA;AAEA;;AACA,MAAMC,cAAc,GAAIC,IAAD,IAAU;AAC/B,SAAO;AACLC,IAAAA,IAAI,EAAE,iBADD;AAELD,IAAAA;AAFK,GAAP;AAID,CALD;;AAMAD,cAAc,CAAC,OAAD,CAAd,C,CACA;AACA;AACA;AACA;;AACAG,KAAK,CAACC,QAAN,CAAeJ,cAAc,CAAC,OAAD,CAA7B,E,CAEA;;AACA,MAAMK,WAAW,GAAG,CAACC,KAAK,GAAGV,YAAT,EAAuBW,MAAvB,KAAkC;AACpD,UAAQA,MAAM,CAACL,IAAf;AACE,SAAK,iBAAL;AACE,6CACKI,KADL;AAEET,QAAAA,IAAI,EAAEU,MAAM,CAACN;AAFf;AAFJ;AAOD,CARD","sourcesContent":["const initailState = {\n  name: 'kdong',\n  age: 30,\n  password: 'omna',\n};\n\n// const changeNickname = {\n//   type: 'CHANGE_NICKNAME',\n//   data: 'KDONG',\n// };\n\n// aciton creator\nconst changeNickname = (data) => {\n  return {\n    type: 'CHANGE_NICKNAME',\n    data,\n  };\n};\nchangeNickname('KDONG');\n// {\n//   type: 'CHANGE_NICKNAME',\n//   data: 'KDONG'\n// }\nstore.dispatch(changeNickname('KDONG'));\n\n// reducer는 (이전상태, 액션) => 다음상태\nconst rootReducer = (state = initailState, action) => {\n  switch (action.type) {\n    case 'CHANGE_NICKNAME':\n      return {\n        ...state,\n        name: action.data,\n      };\n  }\n};\n"]},"metadata":{},"sourceType":"script"}